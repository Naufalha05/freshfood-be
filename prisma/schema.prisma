// schema.prisma

datasource db {
provider = "postgresql"
url = env("DATABASE_URL") // pastikan DATABASE_URL sudah ada di file .env
}

generator client {
provider = "prisma-client-js"
}

model User {
id Int @id @default(autoincrement())
name String
phoneNumber String @unique
address String
password String
role Role @default(USER)
profilePicture String?
products Product[] // Relasi: user -> product (1 ke banyak)
comments Comment[] // Relasi: user -> comment
orders Order[] // Relasi: user -> order
}

model Category {
id Int @id @default(autoincrement())
name String
description String
products Product[]
}

model Product {
id Int @id @default(autoincrement())
name String
description String
price String
imageUrl String?
userId Int
categoryId Int
user User @relation(fields: [userId], references: [id])
category Category @relation(fields: [categoryId], references: [id])
comments Comment[]
orders Order[]
}

model Comment {
id Int @id @default(autoincrement())
userId Int
productId Int
rating Int @default(1)
text String
createdAt DateTime @default(now())
user User @relation(fields: [userId], references: [id])
product Product @relation(fields: [productId], references: [id])

@@index([productId])
}

model Order {
id Int @id @default(autoincrement())
productId Int
product Product @relation(fields: [productId], references: [id])
userId Int
user User @relation(fields: [userId], references: [id])
quantity Int @default(1)
weight Float
condition String
price Float
address String
paymentMethod PaymentMethod @default(QRIS)
status OrderStatus @default(PENDING)
createdAt DateTime @default(now())

@@index([userId])
@@index([status])
}

enum PaymentMethod {
QRIS
TUNAI
}

enum OrderStatus {
PENDING
IN_PROGRESS
SHIPPED
COMPLETED
CANCELLED
}

enum Role {
USER
ADMIN
}